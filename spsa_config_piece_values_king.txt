# SPSA Configuration for OpenBench - Piece Values and King Safety Tuning
# =========================================================================
# Format: param_name, type, current_value, min, max, C_end, R_end
# 
# Field Explanations:
# 1. param_name: UCI option name for the parameter
# 2. type: Either 'int' or 'float' (SeaJay uses int for all these params)
# 3. current_value: Starting/current optimal value
# 4. min: Minimum allowed value (hard boundary)
# 5. max: Maximum allowed value (hard boundary)
# 6. C_end: Step size at end of tuning (affects exploration)
# 7. R_end: Learning rate at end of tuning (affects convergence speed)
#
# OpenBench Settings Recommendations:
# - Alpha: 0.602 (default, from SPSA papers)
# - Gamma: 0.101 (default, from SPSA papers)
# - A-Ratio: 0.1 (default)
# - Pairs-Per: 8 (for LTC), higher for very fast time controls
# - Iterations: 100-200 for initial tuning
# - Distribution: SINGLE
# - Time Control: 10+0.1 or 60+0.6
#
# Expected Impact: 30-60 ELO from piece values, 10-20 ELO from king positions
# Total Parameters: 15
# Recommended Games: 250,000 - 500,000 for convergence
# =========================================================================

# MIDDLEGAME PIECE VALUES
# C_end = 5.0 represents ~8% of range (60), appropriate for piece values
PawnValueMg, int, 100, 70, 130, 5.0, 0.002
KnightValueMg, int, 320, 280, 360, 5.0, 0.002
BishopValueMg, int, 330, 290, 370, 5.0, 0.002
RookValueMg, int, 500, 450, 550, 5.0, 0.002
QueenValueMg, int, 900, 850, 950, 5.0, 0.002

# ENDGAME PIECE VALUES
# Endgame relationships often differ from middlegame
# Pawns typically increase, knights decrease, rooks increase
PawnValueEg, int, 110, 80, 140, 5.0, 0.002
KnightValueEg, int, 310, 270, 350, 5.0, 0.002
BishopValueEg, int, 320, 280, 360, 5.0, 0.002
RookValueEg, int, 510, 460, 560, 5.0, 0.002
QueenValueEg, int, 920, 870, 970, 5.0, 0.002

# KING MIDDLEGAME PST SQUARES
# C_end = 3.0 represents 3% of range (100), conservative for positional values
# NOT tuning: e1 (start +21), b1 (Q-castle -5), g1 (K-castle +16)
# These preserve the fundamental castling incentive structure
king_mg_a1, int, 20, -50, 50, 3.0, 0.002
king_mg_c1, int, 10, -50, 50, 3.0, 0.002
king_mg_d1, int, -20, -50, 50, 3.0, 0.002
king_mg_f1, int, -30, -50, 50, 3.0, 0.002
king_mg_h1, int, 20, -50, 50, 3.0, 0.002

# =========================================================================
# C_end Rationale:
# - Piece values: 5.0 step allows meaningful exploration without wild swings
# - King squares: 3.0 step is conservative, prevents breaking king safety
#
# R_end = 0.002 is standard conservative learning rate for evaluation params
# =========================================================================