--- a/src/search/types.h
+++ b/src/search/types.h
@@ -99,9 +99,10 @@ struct SearchLimits {
 
 // Search statistics and state information
 struct SearchData {
-    // Virtual destructor to make class polymorphic for dynamic_cast
-    virtual ~SearchData() = default;
+    // PERFORMANCE FIX: Remove virtual destructor to avoid vtable overhead
+    // and reduce object size. Use composition instead of inheritance.
+    // virtual ~SearchData() = default;
+    
     // Node statistics
     uint64_t nodes = 0;           // Total nodes searched
     uint64_t betaCutoffs = 0;     // Total beta cutoffs
@@ -327,12 +328,16 @@ struct SearchData {
     // Phase 4: Razoring statistics
     uint64_t razoringCutoffs = 0;       // Positions pruned by razoring
     
-    // Stage 19: Killer moves for move ordering
-    KillerMoves killers;
+    // PERFORMANCE FIX: Use pointers to large arrays instead of embedding them
+    // This reduces SearchData size from 42KB to ~1KB
+    // Allocate these separately and pass pointers
+    
+    // Stage 19: Killer moves for move ordering (now a pointer)
+    KillerMoves* killers = nullptr;
     
-    // Stage 20: History heuristic for move ordering
-    HistoryHeuristic history;
+    // Stage 20: History heuristic for move ordering (now a pointer) 
+    HistoryHeuristic* history = nullptr;
     
-    // Stage 23: Countermove heuristic for move ordering
-    CounterMoves counterMoves;
+    // Stage 23: Countermove heuristic for move ordering (now a pointer)
+    CounterMoves* counterMoves = nullptr;
     int countermoveBonus = 0;  // CM3.3: Bonus value from UCI